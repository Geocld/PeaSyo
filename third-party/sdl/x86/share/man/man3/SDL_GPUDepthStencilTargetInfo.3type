.\" This manpage content is licensed under Creative Commons
.\"  Attribution 4.0 International (CC BY 4.0)
.\"   https://creativecommons.org/licenses/by/4.0/
.\" This manpage was generated from SDL's wiki page for SDL_GPUDepthStencilTargetInfo:
.\"   https://wiki.libsdl.org/SDL_GPUDepthStencilTargetInfo
.\" Generated with SDL/build-scripts/wikiheaders.pl
.\"  revision SDL-preview-3.1.3
.\" Please report issues in this manpage's content at:
.\"   https://github.com/libsdl-org/sdlwiki/issues/new
.\" Please report issues in the generation of this manpage from the wiki at:
.\"   https://github.com/libsdl-org/SDL/issues/new?title=Misgenerated%20manpage%20for%20SDL_GPUDepthStencilTargetInfo
.\" SDL can be found at https://libsdl.org/
.de URL
\$2 \(laURL: \$1 \(ra\$3
..
.if \n[.g] .mso www.tmac
.TH SDL_GPUDepthStencilTargetInfo 3type "SDL 3.1.3" "Simple Directmedia Layer" "SDL3 DATATYPES"
.SH NAME
SDL_GPUDepthStencilTargetInfo \- A structure specifying the parameters of a depth-stencil target used by a render pass\[char46]
.SH HEADER FILE
Defined in SDL3/SDL_gpu\[char46]h

.SH SYNOPSIS
.nf
.B #include \(dqSDL3/SDL.h\(dq
.PP
.BI "typedef struct SDL_GPUDepthStencilTargetInfo
.BI "{
.BI "    SDL_GPUTexture *texture;               /**< The texture that will be used as the depth stencil target by the render pass. */
.BI "    float clear_depth;                     /**< The value to clear the depth component to at the beginning of the render pass. Ignored if SDL_GPU_LOADOP_CLEAR is not used. */
.BI "    SDL_GPULoadOp load_op;                 /**< What is done with the depth contents at the beginning of the render pass. */
.BI "    SDL_GPUStoreOp store_op;               /**< What is done with the depth results of the render pass. */
.BI "    SDL_GPULoadOp stencil_load_op;         /**< What is done with the stencil contents at the beginning of the render pass. */
.BI "    SDL_GPUStoreOp stencil_store_op;       /**< What is done with the stencil results of the render pass. */
.BI "    bool cycle;                        /**< true cycles the texture if the texture is bound and any load ops are not LOAD */
.BI "    Uint8 clear_stencil;                   /**< The value to clear the stencil component to at the beginning of the render pass. Ignored if SDL_GPU_LOADOP_CLEAR is not used. */
.BI "    Uint8 padding1;
.BI "    Uint8 padding2;
.BI "} SDL_GPUDepthStencilTargetInfo;
.fi
.SH DESCRIPTION
The load_op field determines what is done with the depth contents of the
texture at the beginning of the render pass\[char46]


\(bu LOAD: Loads the depth values currently in the texture\[char46]

\(bu CLEAR: Clears the texture to a single depth\[char46]

\(bu DONT_CARE: The driver will do whatever it wants with the memory\[char46] This is
  a good option if you know that every single pixel will be touched in the
  render pass\[char46]

The store_op field determines what is done with the depth results of the
render pass\[char46]


\(bu STORE: Stores the depth results in the texture\[char46]

\(bu DONT_CARE: The driver will do whatever it wants with the depth results\[char46]
  This is often a good option for depth/stencil textures that don't need to
  be reused again\[char46]

The stencil_load_op field determines what is done with the stencil contents
of the texture at the beginning of the render pass\[char46]


\(bu LOAD: Loads the stencil values currently in the texture\[char46]

\(bu CLEAR: Clears the stencil values to a single value\[char46]

\(bu DONT_CARE: The driver will do whatever it wants with the memory\[char46] This is
  a good option if you know that every single pixel will be touched in the
  render pass\[char46]

The stencil_store_op field determines what is done with the stencil results
of the render pass\[char46]


\(bu STORE: Stores the stencil results in the texture\[char46]

\(bu DONT_CARE: The driver will do whatever it wants with the stencil results\[char46]
  This is often a good option for depth/stencil textures that don't need to
  be reused again\[char46]

Note that depth/stencil targets do not support multisample resolves\[char46]

.SH AVAILABILITY
This struct is available since SDL 3\[char46]0\[char46]0

.SH SEE ALSO
.BR \(bu (3),
.BR SDL_BeginGPURenderPass (3)
