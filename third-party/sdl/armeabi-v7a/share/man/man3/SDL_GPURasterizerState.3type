.\" This manpage content is licensed under Creative Commons
.\"  Attribution 4.0 International (CC BY 4.0)
.\"   https://creativecommons.org/licenses/by/4.0/
.\" This manpage was generated from SDL's wiki page for SDL_GPURasterizerState:
.\"   https://wiki.libsdl.org/SDL_GPURasterizerState
.\" Generated with SDL/build-scripts/wikiheaders.pl
.\"  revision SDL-preview-3.1.3
.\" Please report issues in this manpage's content at:
.\"   https://github.com/libsdl-org/sdlwiki/issues/new
.\" Please report issues in the generation of this manpage from the wiki at:
.\"   https://github.com/libsdl-org/SDL/issues/new?title=Misgenerated%20manpage%20for%20SDL_GPURasterizerState
.\" SDL can be found at https://libsdl.org/
.de URL
\$2 \(laURL: \$1 \(ra\$3
..
.if \n[.g] .mso www.tmac
.TH SDL_GPURasterizerState 3type "SDL 3.1.3" "Simple Directmedia Layer" "SDL3 DATATYPES"
.SH NAME
SDL_GPURasterizerState \- A structure specifying the parameters of the graphics pipeline rasterizer state\[char46]
.SH HEADER FILE
Defined in SDL3/SDL_gpu\[char46]h

.SH SYNOPSIS
.nf
.B #include \(dqSDL3/SDL.h\(dq
.PP
.BI "typedef struct SDL_GPURasterizerState
.BI "{
.BI "    SDL_GPUFillMode fill_mode;         /**< Whether polygons will be filled in or drawn as lines. */
.BI "    SDL_GPUCullMode cull_mode;         /**< The facing direction in which triangles will be culled. */
.BI "    SDL_GPUFrontFace front_face;       /**< The vertex winding that will cause a triangle to be determined as front-facing. */
.BI "    float depth_bias_constant_factor;  /**< A scalar factor controlling the depth value added to each fragment. */
.BI "    float depth_bias_clamp;            /**< The maximum depth bias of a fragment. */
.BI "    float depth_bias_slope_factor;     /**< A scalar factor applied to a fragment's slope in depth calculations. */
.BI "    bool enable_depth_bias;        /**< true to bias fragment depth values. */
.BI "    bool enable_depth_clip;        /**< true to enable depth clip, false to enable depth clamp. */
.BI "    Uint8 padding1;
.BI "    Uint8 padding2;
.BI "} SDL_GPURasterizerState;
.fi
.SH DESCRIPTION
NOTE: Some backend APIs (D3D11/12) will enable depth clamping even if
enable_depth_clip is true\[char46] If you rely on this clamp+clip behavior,
consider enabling depth clip and then manually clamping depth in your
fragment shaders on Metal and Vulkan\[char46]

.SH AVAILABILITY
This struct is available since SDL 3\[char46]0\[char46]0

.SH SEE ALSO
.BR \(bu (3),
.BR SDL_GPUGraphicsPipelineCreateInfo (3type)
