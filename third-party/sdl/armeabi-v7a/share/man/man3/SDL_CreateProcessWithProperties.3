.\" This manpage content is licensed under Creative Commons
.\"  Attribution 4.0 International (CC BY 4.0)
.\"   https://creativecommons.org/licenses/by/4.0/
.\" This manpage was generated from SDL's wiki page for SDL_CreateProcessWithProperties:
.\"   https://wiki.libsdl.org/SDL_CreateProcessWithProperties
.\" Generated with SDL/build-scripts/wikiheaders.pl
.\"  revision SDL-preview-3.1.3
.\" Please report issues in this manpage's content at:
.\"   https://github.com/libsdl-org/sdlwiki/issues/new
.\" Please report issues in the generation of this manpage from the wiki at:
.\"   https://github.com/libsdl-org/SDL/issues/new?title=Misgenerated%20manpage%20for%20SDL_CreateProcessWithProperties
.\" SDL can be found at https://libsdl.org/
.de URL
\$2 \(laURL: \$1 \(ra\$3
..
.if \n[.g] .mso www.tmac
.TH SDL_CreateProcessWithProperties 3 "SDL 3.1.3" "Simple Directmedia Layer" "SDL3 FUNCTIONS"
.SH NAME
SDL_CreateProcessWithProperties \- Create a new process with the specified properties\[char46]
.SH HEADER FILE
Defined in SDL3/SDL_process\[char46]h

.SH SYNOPSIS
.nf
.B #include \(dqSDL3/SDL.h\(dq
.PP
.BI "SDL_Process* SDL_CreateProcessWithProperties(SDL_PropertiesID props);
.fi
.SH DESCRIPTION
These are the supported properties:


\(bu 
.BR
.BR SDL_PROP_PROCESS_CREATE_ARGS_POINTER
:
  an array of strings containing the program to run, any arguments, and a
  NULL pointer, e\[char46]g\[char46] const char *args[] = { "myprogram", "argument", NULL
  }\[char46] This is a required property\[char46]

\(bu 
.BR
.BR SDL_PROP_PROCESS_CREATE_ENVIRONMENT_POINTER
:
  an 
.BR SDL_Environment
 pointer\[char46] If this property is set,
  it will be the entire environment for the process, otherwise the current
  environment is used\[char46]

\(bu 
.BR
.BR SDL_PROP_PROCESS_CREATE_STDIN_NUMBER
:
  an 
.BR SDL_ProcessIO
 value describing where standard input
  for the process comes from, defaults to
  
.BR
.BR SDL_PROCESS_STDIO_NULL
\[char46]

\(bu 
.BR
.BR SDL_PROP_PROCESS_CREATE_STDIN_POINTER
:
  an 
.BR SDL_IOStream
 pointer used for standard input when
  
.BR
.BR SDL_PROP_PROCESS_CREATE_STDIN_NUMBER
is set to 
.BR
.BR SDL_PROCESS_STDIO_REDIRECT
\[char46]

\(bu 
.BR
.BR SDL_PROP_PROCESS_CREATE_STDOUT_NUMBER
:
  an 
.BR SDL_ProcessIO
 value describing where standard output
  for the process goes go, defaults to
  
.BR
.BR SDL_PROCESS_STDIO_INHERITED
\[char46]

\(bu 
.BR
.BR SDL_PROP_PROCESS_CREATE_STDOUT_POINTER
:
  an 
.BR SDL_IOStream
 pointer used for standard output when
  
.BR
.BR SDL_PROP_PROCESS_CREATE_STDOUT_NUMBER
is set to 
.BR
.BR SDL_PROCESS_STDIO_REDIRECT
\[char46]

\(bu 
.BR
.BR SDL_PROP_PROCESS_CREATE_STDERR_NUMBER
:
  an 
.BR SDL_ProcessIO
 value describing where standard error
  for the process goes go, defaults to
  
.BR
.BR SDL_PROCESS_STDIO_INHERITED
\[char46]

\(bu 
.BR
.BR SDL_PROP_PROCESS_CREATE_STDERR_POINTER
:
  an 
.BR SDL_IOStream
 pointer used for standard error when
  
.BR
.BR SDL_PROP_PROCESS_CREATE_STDERR_NUMBER
is set to 
.BR
.BR SDL_PROCESS_STDIO_REDIRECT
\[char46]

\(bu 
.BR
.BR SDL_PROP_PROCESS_CREATE_STDERR_TO_STDOUT_BOOLEAN
:
  true if the error output of the process should be redirected into the
  standard output of the process\[char46] This property has no effect if
  
.BR
.BR SDL_PROP_PROCESS_CREATE_STDERR_NUMBER
is set\[char46]

\(bu 
.BR
.BR SDL_PROP_PROCESS_CREATE_BACKGROUND_BOOLEAN
:
  true if the process should run in the background\[char46] In this case the
  default input and output is
  
.BR
.BR SDL_PROCESS_STDIO_NULL
and the exitcode of
  the process is not available, and will always be 0\[char46]

On POSIX platforms, wait() and waitpid(-1, \[char46]\[char46]\[char46]) should not be called, and
SIGCHLD should not be ignored or handled because those would prevent SDL
from properly tracking the lifetime of the underlying process\[char46] You should
use 
.BR SDL_WaitProcess
() instead\[char46]

.SH FUNCTION PARAMETERS
.TP
.I props
the properties to use\[char46]
.SH RETURN VALUE
(
.BR SDL_Process
 *) Returns the newly created and running
process, or NULL if the process couldn't be created\[char46]

.SH THREAD SAFETY
It is safe to call this function from any thread\[char46]

.SH AVAILABILITY
This function is available since SDL 3\[char46]0\[char46]0\[char46]

.SH SEE ALSO
.BR \(bu (3),
.BR SDL_CreateProcess (3),
.BR \(bu (3),
.BR SDL_GetProcessProperties (3),
.BR \(bu (3),
.BR SDL_ReadProcess (3),
.BR \(bu (3),
.BR SDL_GetProcessInput (3),
.BR \(bu (3),
.BR SDL_GetProcessOutput (3),
.BR \(bu (3),
.BR SDL_KillProcess (3),
.BR \(bu (3),
.BR SDL_WaitProcess (3),
.BR \(bu (3),
.BR SDL_DestroyProcess (3)
