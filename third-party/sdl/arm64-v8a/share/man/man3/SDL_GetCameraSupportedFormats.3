.\" This manpage content is licensed under Creative Commons
.\"  Attribution 4.0 International (CC BY 4.0)
.\"   https://creativecommons.org/licenses/by/4.0/
.\" This manpage was generated from SDL's wiki page for SDL_GetCameraSupportedFormats:
.\"   https://wiki.libsdl.org/SDL_GetCameraSupportedFormats
.\" Generated with SDL/build-scripts/wikiheaders.pl
.\"  revision SDL-preview-3.1.3
.\" Please report issues in this manpage's content at:
.\"   https://github.com/libsdl-org/sdlwiki/issues/new
.\" Please report issues in the generation of this manpage from the wiki at:
.\"   https://github.com/libsdl-org/SDL/issues/new?title=Misgenerated%20manpage%20for%20SDL_GetCameraSupportedFormats
.\" SDL can be found at https://libsdl.org/
.de URL
\$2 \(laURL: \$1 \(ra\$3
..
.if \n[.g] .mso www.tmac
.TH SDL_GetCameraSupportedFormats 3 "SDL 3.1.3" "Simple Directmedia Layer" "SDL3 FUNCTIONS"
.SH NAME
SDL_GetCameraSupportedFormats \- Get the list of native formats/sizes a camera supports\[char46]
.SH HEADER FILE
Defined in SDL3/SDL_camera\[char46]h

.SH SYNOPSIS
.nf
.B #include \(dqSDL3/SDL.h\(dq
.PP
.BI "SDL_CameraSpec ** SDL_GetCameraSupportedFormats(SDL_CameraID devid, int *count);
.fi
.SH DESCRIPTION
This returns a list of all formats and frame sizes that a specific camera
can offer\[char46] This is useful if your app can accept a variety of image formats
and sizes and so want to find the optimal spec that doesn't require
conversion\[char46]

This function isn't strictly required; if you call

.BR SDL_OpenCamera
 with a NULL spec, SDL will choose a native
format for you, and if you instead specify a desired format, it will
transparently convert to the requested format on your behalf\[char46]

If
.BR count
is not NULL, it will be filled with the number of elements in
the returned array\[char46]

Note that it's legal for a camera to supply an empty list\[char46] This is what
will happen on Emscripten builds, since that platform won't tell _anything_
about available cameras until you've opened one, and won't even tell if
there _is_ a camera until the user has given you permission to check
through a scary warning popup\[char46]

.SH FUNCTION PARAMETERS
.TP
.I devid
the camera device instance ID to query\[char46]
.TP
.I count
a pointer filled in with the number of elements in the list, may be NULL\[char46]
.SH RETURN VALUE
(
.BR SDL_CameraSpec
.I 
) Returns a NULL terminated array of
pointers to 
.BR SDL_CameraSpec
 or NULL on failure; call

.BR SDL_GetError
() for more information\[char46] This is a single
allocation that should be freed with 
.BR SDL_free
() when it is no
longer needed\[char46]

.SH THREAD SAFETY
It is safe to call this function from any thread\[char46]

.SH AVAILABILITY
This function is available since SDL 3\[char46]0\[char46]0\[char46]

.SH SEE ALSO
.BR \(bu (3),
.BR SDL_GetCameras (3),
.BR \(bu (3),
.BR SDL_OpenCamera (3)
