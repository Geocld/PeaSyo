.\" This manpage content is licensed under Creative Commons
.\"  Attribution 4.0 International (CC BY 4.0)
.\"   https://creativecommons.org/licenses/by/4.0/
.\" This manpage was generated from SDL's wiki page for SDL_GPUColorTargetBlendState:
.\"   https://wiki.libsdl.org/SDL_GPUColorTargetBlendState
.\" Generated with SDL/build-scripts/wikiheaders.pl
.\"  revision SDL-preview-3.1.3
.\" Please report issues in this manpage's content at:
.\"   https://github.com/libsdl-org/sdlwiki/issues/new
.\" Please report issues in the generation of this manpage from the wiki at:
.\"   https://github.com/libsdl-org/SDL/issues/new?title=Misgenerated%20manpage%20for%20SDL_GPUColorTargetBlendState
.\" SDL can be found at https://libsdl.org/
.de URL
\$2 \(laURL: \$1 \(ra\$3
..
.if \n[.g] .mso www.tmac
.TH SDL_GPUColorTargetBlendState 3type "SDL 3.1.3" "Simple Directmedia Layer" "SDL3 DATATYPES"
.SH NAME
SDL_GPUColorTargetBlendState \- A structure specifying the blend state of a color target\[char46]
.SH HEADER FILE
Defined in SDL3/SDL_gpu\[char46]h

.SH SYNOPSIS
.nf
.B #include \(dqSDL3/SDL.h\(dq
.PP
.BI "typedef struct SDL_GPUColorTargetBlendState
.BI "{
.BI "    SDL_GPUBlendFactor src_color_blendfactor;     /**< The value to be multiplied by the source RGB value. */
.BI "    SDL_GPUBlendFactor dst_color_blendfactor;     /**< The value to be multiplied by the destination RGB value. */
.BI "    SDL_GPUBlendOp color_blend_op;                /**< The blend operation for the RGB components. */
.BI "    SDL_GPUBlendFactor src_alpha_blendfactor;     /**< The value to be multiplied by the source alpha. */
.BI "    SDL_GPUBlendFactor dst_alpha_blendfactor;     /**< The value to be multiplied by the destination alpha. */
.BI "    SDL_GPUBlendOp alpha_blend_op;                /**< The blend operation for the alpha component. */
.BI "    SDL_GPUColorComponentFlags color_write_mask;  /**< A bitmask specifying which of the RGBA components are enabled for writing. Writes to all channels if enable_color_write_mask is false. */
.BI "    bool enable_blend;                        /**< Whether blending is enabled for the color target. */
.BI "    bool enable_color_write_mask;             /**< Whether the color write mask is enabled. */
.BI "    Uint8 padding1;
.BI "    Uint8 padding2;
.BI "} SDL_GPUColorTargetBlendState;
.fi
.SH AVAILABILITY
This struct is available since SDL 3\[char46]0\[char46]0

.SH SEE ALSO
.BR \(bu (3),
.BR SDL_GPUColorTargetDescription (3type)
