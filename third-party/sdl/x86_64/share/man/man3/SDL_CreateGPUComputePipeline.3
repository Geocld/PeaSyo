.\" This manpage content is licensed under Creative Commons
.\"  Attribution 4.0 International (CC BY 4.0)
.\"   https://creativecommons.org/licenses/by/4.0/
.\" This manpage was generated from SDL's wiki page for SDL_CreateGPUComputePipeline:
.\"   https://wiki.libsdl.org/SDL_CreateGPUComputePipeline
.\" Generated with SDL/build-scripts/wikiheaders.pl
.\"  revision SDL-preview-3.1.3
.\" Please report issues in this manpage's content at:
.\"   https://github.com/libsdl-org/sdlwiki/issues/new
.\" Please report issues in the generation of this manpage from the wiki at:
.\"   https://github.com/libsdl-org/SDL/issues/new?title=Misgenerated%20manpage%20for%20SDL_CreateGPUComputePipeline
.\" SDL can be found at https://libsdl.org/
.de URL
\$2 \(laURL: \$1 \(ra\$3
..
.if \n[.g] .mso www.tmac
.TH SDL_CreateGPUComputePipeline 3 "SDL 3.1.3" "Simple Directmedia Layer" "SDL3 FUNCTIONS"
.SH NAME
SDL_CreateGPUComputePipeline \- Creates a pipeline object to be used in a compute workflow\[char46]
.SH HEADER FILE
Defined in SDL3/SDL_gpu\[char46]h

.SH SYNOPSIS
.nf
.B #include \(dqSDL3/SDL.h\(dq
.PP
.BI "SDL_GPUComputePipeline* SDL_CreateGPUComputePipeline(
.BI "    SDL_GPUDevice *device,
.BI "    const SDL_GPUComputePipelineCreateInfo *createinfo);
.fi
.SH DESCRIPTION
Shader resource bindings must be authored to follow a particular order
depending on the shader format\[char46]

For SPIR-V shaders, use the following resource sets:


\(bu 0: Sampled textures, followed by read-only storage textures, followed by
  read-only storage buffers

\(bu 1: Write-only storage textures, followed by write-only storage buffers

\(bu 2: Uniform buffers

For DXBC Shader Model 5_0 shaders, use the following register order:


\(bu t registers: Sampled textures, followed by read-only storage textures,
  followed by read-only storage buffers

\(bu u registers: Write-only storage textures, followed by write-only storage
  buffers

\(bu b registers: Uniform buffers

For DXIL shaders, use the following register order:


\(bu (t[n], space0): Sampled textures, followed by read-only storage textures,
  followed by read-only storage buffers

\(bu (u[n], space1): Write-only storage textures, followed by write-only
  storage buffers

\(bu (b[n], space2): Uniform buffers

For MSL/metallib, use the following order:


\(bu [[buffer]]: Uniform buffers, followed by write-only storage buffers,
  followed by write-only storage buffers

\(bu [[texture]]: Sampled textures, followed by read-only storage textures,
  followed by write-only storage textures

.SH FUNCTION PARAMETERS
.TP
.I device
a GPU Context\[char46]
.TP
.I createinfo
a struct describing the state of the compute pipeline to create\[char46]
.SH RETURN VALUE
(
.BR SDL_GPUComputePipeline
 *) Returns a compute
pipeline object on success, or NULL on failure; call

.BR SDL_GetError
() for more information\[char46]

.SH AVAILABILITY
This function is available since SDL 3\[char46]0\[char46]0\[char46]

.SH SEE ALSO
.BR \(bu (3),
.BR SDL_BindGPUComputePipeline (3),
.BR \(bu (3),
.BR SDL_ReleaseGPUComputePipeline (3)
